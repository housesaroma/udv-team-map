import { Button } from "primereact/button";
import React, { useEffect, useState } from "react";
import { useNavigate, useParams } from "react-router-dom";
import { PageLoader } from "../components/ui/PageLoader";
import { useAuth } from "../hooks/useAuth";
import { userService } from "../services/userService";
import type { User } from "../types";
import { calculateExperience, formatDate } from "../utils/dateUtils";

const ProfilePage: React.FC = () => {
    const { userId } = useParams();
    const { logout, user: currentUser } = useAuth();
    const navigate = useNavigate();

    const [profile, setProfile] = useState<User | null>(null);
    const [loading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<string | null>(null);
    const [notFound, setNotFound] = useState<boolean>(false);
    const [usingMockData, setUsingMockData] = useState<boolean>(false);

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è
    useEffect(() => {
        const loadProfile = async () => {
            // –ï—Å–ª–∏ —ç—Ç–æ –ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å (–±–µ–∑ userId) –∏ –µ—Å—Ç—å —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if (!userId && currentUser) {
                try {
                    setLoading(true);
                    setError(null);
                    setNotFound(false);

                    // –î–ª—è –ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    const userProfile = await userService.getUserProfile(
                        currentUser.id
                    );
                    setProfile(userProfile);
                    setUsingMockData(true); // –ü–æ–º–µ—á–∞–µ–º —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º mock –¥–∞–Ω–Ω—ã–µ
                } catch (err) {
                    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è:", err);
                    setError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è");
                } finally {
                    setLoading(false);
                }
                return;
            }

            // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω userId (—á—É–∂–æ–π –ø—Ä–æ—Ñ–∏–ª—å)
            if (!userId) {
                setLoading(false);
                return;
            }

            try {
                setLoading(true);
                setError(null);
                setNotFound(false);
                setUsingMockData(false);

                const userProfile = await userService.getUserProfile(userId);
                setProfile(userProfile);
            } catch (err) {
                console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:", err);

                const errorMessage =
                    err instanceof Error
                        ? err.message
                        : "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è";
                setError(errorMessage);

                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ "–Ω–µ –Ω–∞–π–¥–µ–Ω"
                if (
                    errorMessage.includes("–Ω–µ –Ω–∞–π–¥–µ–Ω") ||
                    errorMessage.includes("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç") ||
                    errorMessage.includes("404")
                ) {
                    setNotFound(true);
                }
            } finally {
                setLoading(false);
            }
        };

        loadProfile();
    }, [userId, currentUser]);

    const handleLogout = () => {
        logout();
        navigate("/login");
    };

    const handleGoHome = () => {
        navigate("/");
    };

    const handleGoToMyProfile = () => {
        navigate("/profile");
    };

    const isOwnProfile = !userId || userId === currentUser?.id;

    if (loading) {
        return <PageLoader />;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è –∫–æ–≥–¥–∞ –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
    if (notFound) {
        return (
            <div className="container mx-auto p-6 pt-24">
                <div className="bg-secondary rounded-lg shadow-md p-8 text-center">
                    <div className="mb-6">
                        <i className="pi pi-user-slash text-6xl text-gray-400 mb-4"></i>
                        <h2 className="text-2xl font-bold text-gray-700 font-golos mb-2">
                            –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
                        </h2>
                        <p className="text-gray-600 font-golos">
                            {error ||
                                "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –±—ã–ª —É–¥–∞–ª–µ–Ω"}
                        </p>
                    </div>
                    <div className="flex justify-center space-x-4">
                        <Button
                            label="–ù–∞ –≥–ª–∞–≤–Ω—É—é"
                            icon="pi pi-home"
                            onClick={handleGoHome}
                            className="font-inter"
                        />
                        {currentUser && (
                            <Button
                                label="–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"
                                icon="pi pi-user"
                                onClick={handleGoToMyProfile}
                                className="font-inter bg-primary border-primary"
                            />
                        )}
                    </div>
                </div>
            </div>
        );
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
    if (error && !profile) {
        return (
            <div className="container mx-auto p-6 pt-24">
                <div className="bg-secondary rounded-lg shadow-md p-8 text-center">
                    <div className="mb-6">
                        <i className="pi pi-exclamation-triangle text-6xl text-yellow-500 mb-4"></i>
                        <h2 className="text-2xl font-bold text-gray-700 font-golos mb-2">
                            –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
                        </h2>
                        <p className="text-gray-600 font-golos mb-4">
                            {getUserFriendlyError(error)}
                        </p>
                    </div>
                    <div className="flex justify-center space-x-4">
                        <Button
                            label="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞"
                            icon="pi pi-refresh"
                            onClick={() => globalThis.location.reload()}
                            className="font-inter"
                        />
                        <Button
                            label="–ù–∞ –≥–ª–∞–≤–Ω—É—é"
                            icon="pi pi-home"
                            onClick={handleGoHome}
                            severity="secondary"
                            className="font-inter"
                        />
                    </div>
                </div>
            </div>
        );
    }

    return (
        <div className="container mx-auto p-6 pt-24">
            <div className="bg-secondary rounded-lg shadow-md p-8">
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
                <div className="flex justify-between items-center mb-8">
                    <div>
                        <h1 className="text-3xl font-bold text-primary font-golos">
                            {profile
                                ? `${profile.lastName} ${profile.firstName} ${
                                      profile.middleName || ""
                                  }`.trim()
                                : "–ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"}
                        </h1>
                        {usingMockData && (
                            <p className="text-sm text-gray-500 font-golos mt-1">
                                üìã –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                            </p>
                        )}
                    </div>
                    {isOwnProfile && (
                        <Button
                            onClick={handleLogout}
                            label="–í—ã–π—Ç–∏"
                            icon="pi pi-sign-out"
                            severity="danger"
                            className="font-inter"
                        />
                    )}
                </div>

                {profile ? (
                    <div className="space-y-8">
                        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏ */}
                        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
                            {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - —Å—Ç–∞–∂ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã */}
                            <div className="space-y-6">
                                {/* –°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã */}
                                <div className="bg-white rounded-lg p-4 shadow-sm">
                                    <h3 className="text-lg font-semibold text-gray-800 mb-3 font-golos">
                                        –°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã
                                    </h3>
                                    <p className="text-xl text-gray-900 font-golos font-medium">
                                        {calculateExperience(profile.hireDate)}
                                    </p>
                                </div>

                                {/* –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                                <div className="bg-white rounded-lg p-4 shadow-sm">
                                    <h3 className="text-lg font-semibold text-gray-800 mb-3 font-golos">
                                        –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                                    </h3>
                                    <div className="space-y-3 text-gray-700 font-golos">
                                        <div>
                                            <span className="font-medium">
                                                –ì–æ—Ä–æ–¥:
                                            </span>{" "}
                                            {profile.city || "–ù–µ —É–∫–∞–∑–∞–Ω"}
                                        </div>
                                        <div>
                                            <span className="font-medium">
                                                –¢–µ–ª–µ—Ñ–æ–Ω:
                                            </span>{" "}
                                            {profile.phone || "–ù–µ —É–∫–∞–∑–∞–Ω"}
                                        </div>
                                        <div>
                                            <span className="font-medium">
                                                Email:
                                            </span>{" "}
                                            {profile.email || "–ù–µ —É–∫–∞–∑–∞–Ω"}
                                        </div>
                                        <div>
                                            <span className="font-medium">
                                                –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:
                                            </span>{" "}
                                            {formatDate(profile.birthDate)}
                                        </div>
                                        <div>
                                            <span className="font-medium">
                                                –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:
                                            </span>{" "}
                                            {profile.department?.name ||
                                                "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
                                        </div>
                                        <div>
                                            <span className="font-medium">
                                                –î–æ–ª–∂–Ω–æ—Å—Ç—å:
                                            </span>{" "}
                                            {profile.position || "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}
                                        </div>
                                        {profile.messengerLink && (
                                            <div>
                                                <span className="font-medium">
                                                    –¢–µ–ª–µ–≥—Ä–∞–º:
                                                </span>{" "}
                                                {profile.messengerLink}
                                            </div>
                                        )}
                                    </div>
                                </div>
                            </div>

                            {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –æ —Å–µ–±–µ */}
                            <div className="bg-white rounded-lg p-4 shadow-sm">
                                <h3 className="text-lg font-semibold text-gray-800 mb-3 font-golos">
                                    –û —Å–µ–±–µ
                                </h3>
                                <p className="text-gray-700 font-golos leading-relaxed">
                                    {profile.interests ||
                                        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞"}
                                </p>
                            </div>
                        </div>

                        {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
                        <hr className="my-6 border-gray-300" />

                        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è) */}
                        {isOwnProfile && (
                            <div className="flex justify-end space-x-4">
                                <Button
                                    label="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
                                    icon="pi pi-check"
                                    className="font-inter bg-primary border-primary hover:bg-primary-dark"
                                />
                                <Button
                                    label="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                                    icon="pi pi-pencil"
                                    className="font-inter bg-secondary border-secondary hover:bg-secondary-dark"
                                />
                            </div>
                        )}
                    </div>
                ) : (
                    <div className="text-center py-8">
                        <p className="text-gray-600 text-lg font-golos">
                            –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
                        </p>
                    </div>
                )}
            </div>
        </div>
    );
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ –ø–æ–Ω—è—Ç–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏—è
const getUserFriendlyError = (error: string): string => {
    if (
        error.includes("Unexpected end of JSON input") ||
        error.includes("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç")
    ) {
        return "–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
    }
    if (
        error.includes("Failed to fetch") ||
        error.includes("–ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º")
    ) {
        return "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.";
    }
    if (error.includes("500") || error.includes("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")) {
        return "–í—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
    }
    if (error.includes("400") || error.includes("–ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å")) {
        return "–ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö.";
    }
    return error;
};

export default ProfilePage;
